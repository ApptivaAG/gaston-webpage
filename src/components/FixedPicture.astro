---
import fs from "node:fs";
import { extname, join } from "node:path";
import * as codecs from "@astropub/codecs";
import { Picture } from "astro-imagetools/components";


const getImageDimensions = async (src: string) => {
  const filepath = join(process.cwd(), src)
  const extension = extname(filepath).slice(1);

  const imageFormat = extension === "jpeg" ? "jpg" : extension;

  const buffer = fs.readFileSync(filepath);
  const decodedImage = await codecs[imageFormat].decode(buffer);
  return {
    width: decodedImage.width,
    height: decodedImage.height,
  };
}

const { height: propHeight, width: propWidth, ...pictureProps } = Astro.props;
const { src } = pictureProps;

let desiredWidth = propWidth

if (!desiredWidth) {
  const { height, width } = await getImageDimensions(src);
  desiredWidth = Math.floor((propHeight / height) * width);
}

const breakpoints = [desiredWidth, desiredWidth * 2]; // calculate the desired breakpoint sizes (i.e. 1x and 2x)
pictureProps.breakpoints = breakpoints;
pictureProps.sizes = `${desiredWidth}px`
pictureProps.layout = 'fixed'
---

<Picture { ...pictureProps } />